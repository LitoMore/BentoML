name: CI
on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: '0 0 * * 1/2'
env:
  LINES: 120
  COLUMNS: 120
  BENTOML_DO_NOT_TRACK: True
  PYTEST_PLUGINS: bentoml.testing.pytest.plugin
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrun
defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}
jobs:
  unit:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
    name: python${{ matrix.python-version }}_unit_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          cache: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pdm use -f ${{ matrix.python-version }}
          pdm install -G grpc -G io -G testing
      - name: Unit tests
        run: pdm run -v tests tests/unit
  integrations:
    name: Running framework integrations tests
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          cache: true
          python-version: '3.8'
      - name: Install dependencies
        run: pdm install -G testing -G frameworks
      - name: Run framework integration tests
        run: pdm run -v tests tests/integration
  e2e-monitoring:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
    name: python${{ matrix.python-version }}_monitoring_e2e_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    env:
      SETUPTOOLS_USE_DISTUTILS: stdlib
      BENTOML_BUNDLE_LOCAL_BUILD: True
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Set up Docker Buildx
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          cache: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pdm use -f ${{ matrix.python-version }}
          pdm install -G io -G testing -G monitor-otlp
      - name: Run the monitoring tests
        working-directory: examples/monitoring/task_classification
        run: |
          pip install -r requirements.txt
          mkdir -p monitoring && pdm run -v pytest . -vvv --capture=tee-sys
  e2e-bento-server:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        server_type: ['http', 'grpc']
        exclude:
          - os: windows-latest
            server_type: 'grpc'
          - os: macos-latest
            server_type: 'grpc'
            python-version: '3.10'
          - python-version: '3.11'
            # NOTE: Remove tests on 3.11 for gRPC for now, as it needs more investigation
            server_type: 'grpc'
    name: python${{ matrix.python-version }}_${{ matrix.server_type }}_e2e_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    env:
      SETUPTOOLS_USE_DISTUTILS: stdlib
      BENTOML_BUNDLE_LOCAL_BUILD: True
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Set up Docker Buildx
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          cache: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pdm use -f ${{ matrix.python-version }}
          pdm install -G grpc -G io -G testing
      - name: Install dependencies for ${{ matrix.server_type }}-based tests.
        working-directory: tests/e2e/bento_server_${{ matrix.server_type }}
        run: pip install -r requirements.txt
      - name: Run ${{ matrix.server_type }} tests and generate coverage report
        run: pdm run -v tests tests/e2e/bento_server_${{ matrix.server_type }}
concurrency:
  group: ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
